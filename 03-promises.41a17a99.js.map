{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgB,SAACC,EAAUC,GAY/B,OAXc,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACeC,KAAKC,SAAW,GAEpCJ,EAAQ,sBAAqCK,OAAfR,EAAS,QAAWQ,OAALP,EAAK,OAElDG,EAAO,oBAAmCI,OAAfR,EAAS,QAAWQ,OAALP,EAAK,M,GAGnDA,E,KAINL,EAAKa,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACP,IAAMC,EAAQC,SAASjB,EAAKgB,MAAME,OAC5Bb,EAAQL,EAAKK,KAAKa,MAClBC,EAASnB,EAAKmB,OAAOD,MAC1B,IAAKE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC5BjB,EAAciB,EAAI,EAAGf,EAAOe,EAAIJ,GAC9BK,MAAK,SAAAH,GACJI,EAAAxB,GAASyB,OAAOC,QAAQN,E,IAEzBO,OAAM,SAAAC,GACLJ,EAAAxB,GAASyB,OAAOI,QAAQD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst createPromise = (position, step) => {\nconst promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve(`Fulfilled promise  ${position} in ${step}ms`);\n        } else {\n          reject(`Rejected promise ${position} in ${step}ms`);\n        }\n      }, \n      step);\n    })\n  return promise;\n  };\nform.addEventListener(\"submit\", handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n const delay = parseInt(form.delay.value);\n const step = (form.step.value);\n const amount = form.amount.value;\n  for (i = 0; i < amount; i += 1) {\n   createPromise(i + 1, step * i + delay)\n    .then(value => {\n      Notiflix.Notify.success(value);\n      })\n    .catch(error => { \n      Notiflix.Notify.failure(error);\n    })\n  }\n};"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","step","Promise","resolve","reject","setTimeout","Math","random","concat","addEventListener","event","preventDefault","delay","parseInt","value","amount","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.41a17a99.js.map"}