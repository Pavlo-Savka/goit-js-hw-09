{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgB,CAACC,EAAUC,IACf,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,sBAAsBH,QAAeC,OAE7CG,EAAO,oBAAoBJ,QAAeC,MAAS,GAEpDA,EAAK,IAIZL,EAAKY,iBAAiB,UACtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAQC,SAAShB,EAAKe,MAAME,OAC5BZ,EAAOL,EAAKK,KAAKY,MACjBC,EAASlB,EAAKkB,OAAOD,MAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BhB,EAAcgB,EAAI,EAAGd,EAAOc,EAAIJ,GAC7BK,MAAKH,IACJI,EAAAvB,GAASwB,OAAOC,QAAQN,EAAM,IAE/BO,OAAMC,IACLJ,EAAAvB,GAASwB,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst createPromise = (position, step) => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`Fulfilled promise  ${position} in ${step}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${step}ms`);\n      }\n    }, step);\n  });\n  return promise;\n};\nform.addEventListener('submit', handleSubmit);\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const delay = parseInt(form.delay.value);\n  const step = form.step.value;\n  const amount = form.amount.value;\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, step * i + delay)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","step","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay","parseInt","value","amount","i","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.0bcda558.js.map"}